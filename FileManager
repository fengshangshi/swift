import Foundation
import UIKit

let manager = FileManager.default
let urlForDocument = manager.urls(for: FileManager.SearchPathDirectory.documentDirectory, in: FileManager.SearchPathDomainMask.userDomainMask)

let url = urlForDocument[0] as NSURL

// 对指定路径执行浅搜索，返回指定目录路径下的文件、子目录及符号链接的列表
let contentsOfPath = try? manager.contentsOfDirectory(atPath: url.path!)
print("contentsOfPath: \(contentsOfPath)")

// 对指定路劲执行浅搜索，返回指定目录路径下的文件、子目录及符号链接的列表
let contentsOfURL = try? manager.contentsOfDirectory(at: url as URL, includingPropertiesForKeys: nil, options: FileManager.DirectoryEnumerationOptions.skipsHiddenFiles)
print("contentsOfURL: \(contentsOfURL)")

// 深度遍历，会递归遍历子文件夹（但不会递归符号链接）
let enumeratorAtPath = manager.enumerator(atPath: url.path!)
print("enumeratorAtPath: \(enumeratorAtPath?.allObjects)")

// 深度遍历，会递归遍历子文件夹（包括符号链接、所有要求性能的话enumeratorAtPath）
let subPaths = manager.subpaths(atPath: url.path!)
print("subPaths: \(subPaths)")


// 判断文件或文件夹是否存在
// NSHomeDirectory()得到程序所在的根目录
let fileManager = FileManager.default
let filePath: String = NSHomeDirectory() + "/Documents/fold1/test2.txt"
var exist = fileManager.fileExists(atPath: filePath)
print(filePath)


// 创建文件夹
// 方法一
let myDirectory: String = NSHomeDirectory() + "/Documents/myFolder/Files"

try! fileManager.createDirectory(at: URL.init(fileURLWithPath: myDirectory), withIntermediateDirectories: true, attributes: nil)

// 将对象写入文件
// 把String保存到文件
let filePath1: String = NSHomeDirectory() + "/Documents/string.txt"
let info = "欢迎来到string写入到文件"
try! info.write(toFile: filePath1, atomically: true, encoding: String.Encoding.utf8)
