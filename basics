

// The Basics
let maximumNuberOfLoginAttempts = 10
var currentLoginAttempt = 0

var x = 0.0, y = 0.0, z = 0.0
// var x, y, z: Double = 0.0 //wrong


var welcomeMessage: String
welcomeMessage = "Hello"

var red, green, blue: Double

var friendlyWelcome = "Hello!"
friendlyWelcome = "Bonjour!"

let languageName = "Swift"
//languageName = "Swift++" // wrong

print(friendlyWelcome)
print("The current value of friendlyWelcome is \(friendlyWelcome)")






// Integer Bounds
let minValue = UInt8.min
let maxValue = UInt8.max


// Type Safety and Type Inference
let meaningOfLife = 42
//let pi = 3.14159
let anotherPi = 3 + 0.14156


let decimalInteger = 17
let binaryInteger = 0b10001      // binary notation
let octalInteger = 0o21          // octal notation
let hexadecimalInteger = 0x11    // hexadecimal notation

let decimalDouble = 12.1875
let exponentDouble = 1.21875e1
let hexadecimalDouble = 0xC.3p0

let paddedDouble = 000123.456
let oneMillion = 1_000_000
let justOverOneMillion = 1_000_000.000_000_1


//let connotBeNegative: UInt8 = -1
//let tooBig: Int = Int8.max + 1


let twoThousand: UInt16 = 2_000
let one: UInt8 = 1
let twoThousandAndOne = twoThousand + UInt16(one)

let three = 3
let pointOneFourOneFiveNie = 0.14159
let pi = Double(three) + pointOneFourOneFiveNie


let integerPi = Int(pi)



// Type Aliases
typealias AudioSample = UInt16
var maxAmplitudeFound = AudioSample.max


let orangesAreOrange = true
let turnipsAreDelicious = false

if turnipsAreDelicious {
    print("Mmm, tasty turnips!")
} else {
    print("Eww, turnips are horrible.")
}

let i = 1
if i == 1 {
    
}


let http404Error = (404, "Not Found")
let (statusCode, statusMessage) = http404Error
print("The status code is \(statusCode)")
print("The status message is \(statusMessage)")

let (justTheStatusCode, _) = http404Error
print("The status code is \(justTheStatusCode)")

print("The status code is \(http404Error.0)")
print("The status message is \(http404Error.1)")



let http200Status = (statusCode: 200, description: "OK")
print("The status code is \(http200Status.statusCode)")
print("The status message is \(http200Status.description)")


// Optionals
let possibleNumber = "123"
let convertedNumber = Int(possibleNumber)


var serverResponseCode: Int? = 404
serverResponseCode = nil


var surveyAnswer: String?

if convertedNumber != nil {
    print("convertedNumber contains some integer value.")
}

if convertedNumber != nil {
    print("convertedNumber has an integer value of \(convertedNumber!).")
}

if let actualNumber = Int(possibleNumber) {
    print("\"\(possibleNumber)\" has an integer value of \(actualNumber)")
} else {
    print("\"\(possibleNumber)\" could not be converted to an integer")
}


if let firstNumber = Int("4"), let secondNumber = Int("42"),
    firstNumber < secondNumber && secondNumber < 100 {
        print("\(firstNumber) < \(secondNumber) < 100")
}



let possibleString: String? = "An optional string."
let forcedString: String = possibleString!

let assumedString: String! = "An implicitly unwrapped optional string."
let implicitString: String = assumedString


if let definiteString = assumedString {
    print(definiteString)
}



func canThrowAnError() throws {
    
}

do {
    try canThrowAnError()
} catch {
    
}

func makeASandwich() throws {
    
}

//do {
//    try makeASandwich()
//    eatAShadwich()
//} catch SandwichError.outOfCleanDishes {
//    washDishes()
//} catch SandwichError.missingIngredients(let ingredients) {
//    buyGroceries(ingredients)
//}


// asserts
let age = -3
//assert(age >= 0, "A person's age cannot be less than zero.")

//assert(age >= 0, "年龄不能小于零")













